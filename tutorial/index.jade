.chapter(data-title='Server Notifications & Alerts')
  .step(data-title='List server admins', data-file='config/administrators.yml')
    :markdown
      ## List server admins

      Create a list of administrators who should be notified if a server error occurs. The only requirement we have is a `phone_number`.

  .step(data-title='Configure Twilio client', data-file='app/controllers/notifications_controller.rb', data-highlight='40-43')
    :markdown
      ## Configure Twilio client

      In order to send a message we'll need to initiate the [Twilio REST client](http://twilio-ruby.readthedocs.org/en/latest/usage/basics.html#authentication), which requires pulling our `TWILIO_ACCOUNT_SID` and `TWILIO_AUTH_TOKEN`  [environment variables](http://ruby-doc.org/core-2.1.4/ENV.html).

  .step(data-title='Handle all exceptions', data-file='app/controllers/notifications_controller.rb', data-highlight='3-5')
    :markdown
      ## Handle all exceptions on a controller

      Here we ensure any [`StandardError`](http://ruby-doc.org/core-2.2.0/Exception.html) triggers our alert methods with [`rescue_from`](http://api.rubyonrails.org/classes/ActiveSupport/Rescuable/ClassMethods.html#method-i-rescue_from).

  .step(data-title='Custom alert', data-file='app/controllers/notifications_controller.rb', data-highlight='7-13')
    :markdown
      ## Create a custom alert message

      Here we create a custom alert message and include the raised exception. Additionally if available it would make sense to include a snapshot of any server monitor we might have.

  .step(data-title='Read the admins', data-file='app/controllers/notifications_controller.rb', data-highlight='15-21')
    :markdown
      ## Reading the admins from file

      Next we read the admins [from file](http://ruby-doc.org/stdlib-1.8.6/libdoc/yaml/rdoc/YAML.html#load_file-method), loop through them and fire off our SMS method.

  .step(data-title='Sending an SMS', data-file='app/controllers/notifications_controller.rb', data-highlight='41-54')
    :markdown
      ## Sending an SMS

      Here are the three parameters needed to [send an SMS](https://www.twilio.com/docs/quickstart/ruby/sms/sending-via-rest) using the [Twilio REST API](https://www.twilio.com/docs/api/rest): a `:from`, `:to` and `:body`. At the end we simply print out the phone number we're dialing. [US phone numbers](https://www.twilio.com/help/faq/sms/is-mms-supported-for-all-carriers-in-us-and-canada) can also send an image with the message.

  .step(data-title='Finish')
    :markdown
      ## All Done!

      That's it! We've just implemented an automated server notification system that can send you server alerts if anything goes wrong.

      Thanks for checking out this tutorial! If you have any feedback to share with us, we'd love to hear it. Tweet [@twilio](http://twitter.com/twilio) to let us know what you think.

